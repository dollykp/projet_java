@startuml
'https://plantuml.com/sequence-diagram

package totallyNotZelda {

class Main{
    displayZoneFrame : JFrame
    +Main()
    +main()
}
class Playground{
    - environment : ArrayList<Sprite>
    +Playground()
    +getSolidSprite()
    +getSpriteList()

}

package "enums" {
    enum Direction {
        NORTH
        SOUTH
        EAST
        WEST
        NONE
    }
}

package "sprites" {
    class SolidSprite {
        - x: double
        - y: double
        - width: double
        - height: double
        + draw(Graphics g)
    }

    class DynamicSprite extends SolidSprite {
        - isWalking: boolean
        - isMoving: boolean
        - speed: double
        - direction: Direction
        + moveIfPossible()
        + setDirection()
    }

    class Sprite implements Displayable {
    -height : double
    -image : Image
    -width:double
    -x:double
    -y:double
    +Sprite()
    +draw()
    }

}

package "engines" {

    class GameEngine implements Engine, KeyListener {
        - hero: DynamicSprite
        - environment: ArrayList<SolidSprite>
        + update()
        + keyPressed(KeyEvent e)
        + keyReleased(KeyEvent e)
    }

    class CameraEngine implements Engine{
        -x : int
        -y : int
        -camWidth : int
        -camHeight : int
        -mapWidth : int
        -mapHeight : int
        +update()
    }

    class PhysicEngine implements Engine{
        - movingSpriteList : ArrayList<DynamicSprite>
        - environment : ArrayList<SolidSprite>
        + PhysicEngine()
        + addToEnvironmentList()
        + update()
        + setEnvironment()
        + addToMovingSpriteList()
    }
    class RenderEngine implements Engine{
        -renderList:ArrayList<Displayable>
        -cameraEngine:CameraEngine
        + addToRenderList()
        + addToRenderList()
        +paint()
        +update()
    }
}

package "characters"{
    class Enemy {
    - name :String
    - lifePoints :double
    - speed :double
    - attackPower:double
    - defensePoint:double
    + takeDamage()
    +attackChara()
    +move()
    }

    class BlueSlime extends Enemy {
        - nbOfColumn : int
        +move()
    }

    class PurpleSlime extends Enemy{
    }
}

GameEngine --> DynamicSprite : uses
DynamicSprite --> Direction : uses
Enemy --> DynamicSprite : extends
SolidSprite <|-- DynamicSprite : extends

@enduml
